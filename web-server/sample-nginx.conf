# Reference http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_min_uses
# Plain site upstream server
upstream dev_cl_cdn {
        # origin (this is the web server been create earlier EX: IP, HOSTNAME and IP:PORTNO, etc)
        server 192.168.1.139;
}

# API upstream server
upstream dev_cl_api_cdn {
        # origin (this is the web server been create earlier EX: IP, HOSTNAME and IP:PORTNO, etc)
        server 192.168.1.139:3005;
}

# cache setting http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
#proxy_cache_path /var/cache/nginx/gauth.groots.in levels=1:2 keys_zone=cdn_cloudselect_cache:128m max_size=2g inactive=6h;

include /etc/nginx/blockuseragents.rules;
server {
        # Listener port
        listen 80;
        #your domain name ie: www.groots.in
        server_name dev.cl.io;
        # Rewrite rule force http to https
        if ($scheme != "https") {
        rewrite ^ https://$host$request_uri permanent;
        }
}

server {
        # Accept only valid referer, block invalid referer bad refereres
        valid_referers none blocked dev.cl.io cl.io;
        if ($invalid_referer){
                return 444;
        }
        if ($blockedagent) {
                return 403;
        }
        # Listener port
        listen 443 ssl http2;
        #your domain name ie: www.groots.in
        server_name dev.cl.io;
        # SSL session cache timeout
        ssl_session_cache builtin:1000 shared:SSL:200m;
        # SSL certificate path (certificate should be in .pem format)
        ssl_certificate /etc/letsencrypt/live/dev.cl.io/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/dev.cl.io/privkey.pem; # managed by Certbot
        # SSL protocol
        ssl_protocols TLSv1.2;
        # SSL cipher
        proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;
        # SSL logger log file path
        access_log /var/log/nginx/dev.cl.io/ssl.access.log;
        error_log  /var/log/nginx/dev.cl.io/ssl.error.log;
        # Allow request size (Avoid 413 (Request Entity Too Large) error)
        client_max_body_size 512m;
        # Proxy cache setting
        #in root location, every file content these file format will be serve as a cache # this line must be include on cdn server and origin backend server.
        location ~* .(mp4|gif|jpeg|jpg|png|ico|css|js|swf|pdf|svg|svg+xml|zip|otf|rss|tgz|gz|rar|bz2|doc|xls|tar|ppt|waw|rtf)$ {
                #http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_redirect (we dont need rewrite when proxy to upstream)
                proxy_redirect off;
                #proxy_pass to the upstream that we set.
                proxy_pass http://dev_cl_cdn;
                #An unchanged “Host” request header field can be passed like this
                proxy_set_header Host $http_host;
                #cache will be expire in 6 hours
                expires 360m;
                #proxy pass to the cache rules we setup on top of the config file
                proxy_cache cdn_cache;
                proxy_buffering        on;
                proxy_cache_valid      200 301 302 304 10m;
                # Proxy cache with method
                proxy_cache_methods GET HEAD;
                #cache will be revalidate with the origin server if it is expire
                proxy_cache_revalidate on;
                #with this header you can know the status of the content been cache or MISS. (can check via inspect element, network)
                add_header Groots-cdn-Cache $upstream_cache_status;
                add_header X-Proxy-Cache $upstream_cache_status;
                add_header X-Cache-Status $upstream_cache_status;
                #sets the number of times an item must be requested by clients before NGINX caches it.
                proxy_cache_min_uses 1;
                proxy_cache_background_update on;
                proxy_cache_lock on;
                # Cache key
                proxy_cache_key $uri;
                proxy_cache_use_stale error timeout updating invalid_header http_500 http_502 http_503 http_504;
        }
        # Plain site upstream server
        location / {
                # Set Real IP from remote_addr
                set_real_ip_from 0.0.0.0/0;
                real_ip_header X-Real-IP;
                real_ip_recursive on;
                # Proxy upstream server
                proxy_pass http://dev_cl_cdn;
                # Proxy Buffers
                proxy_buffers               4 256k;
                proxy_buffer_size           128k;
                proxy_busy_buffers_size     256k;
                proxy_temp_file_write_size  256k;
                # Proxy Timeouts
                proxy_connect_timeout       14400;
                proxy_send_timeout          14400;
                proxy_read_timeout          14400;
                send_timeout                14400;
                # http version
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;
                # Proxy set header
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header Connection 'Keep-Alive';
                proxy_set_header Proxy-Connection 'Keep-Alive';
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Referer $http_referer;
                # Proxy hide headers
                proxy_hide_header Pragma;
                proxy_hide_header Server;
                proxy_hide_header Request-Context;
                proxy_hide_header X-Powered-By;
                proxy_hide_header Access-Control-Allow-Headers;
                proxy_hide_header Access-Control-Allow-Methods;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_hide_header Via;
        }
        # API upstream server
        location /api {
                # Set Real IP from remote_addr
                set_real_ip_from 0.0.0.0/0;
                real_ip_header X-Real-IP;
                real_ip_recursive on;
                # Proxy upstream server
                proxy_pass http://dev_cl_api_cdn;
                # Proxy Buffers
                proxy_buffers               4 256k;
                proxy_buffer_size           128k;
                proxy_busy_buffers_size     256k;
                proxy_temp_file_write_size  256k;
                # Proxy Timeouts
                proxy_connect_timeout       14400;
                proxy_send_timeout          14400;
                proxy_read_timeout          14400;
                send_timeout                14400;
                # http version
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;
                # Proxy set header
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header Connection 'Keep-Alive';
                proxy_set_header Proxy-Connection 'Keep-Alive';
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Referer $http_referer;
                # Proxy hide headers
                proxy_hide_header Pragma;
                proxy_hide_header Server;
                proxy_hide_header Request-Context;
                proxy_hide_header X-Powered-By;
                proxy_hide_header Access-Control-Allow-Headers;
                proxy_hide_header Access-Control-Allow-Methods;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_hide_header Via;
        }
        # Plain site upstream server
        location /phpmyadmin {
                # Set Real IP from remote_addr
                set_real_ip_from 0.0.0.0/0;
                real_ip_header X-Real-IP;
                real_ip_recursive on;
                # Proxy upstream server
                proxy_pass http://dev_cl_cdn;
                # Proxy Buffers
                proxy_buffers               4 256k;
                proxy_buffer_size           128k;
                proxy_busy_buffers_size     256k;
                proxy_temp_file_write_size  256k;
                # Proxy Timeouts
                proxy_connect_timeout       14400;
                proxy_send_timeout          14400;
                proxy_read_timeout          14400;
                send_timeout                14400;
                # http version
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;
                # Proxy set header
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $http_host;
                proxy_set_header Connection 'Keep-Alive';
                proxy_set_header Proxy-Connection 'Keep-Alive';
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Referer $http_referer;
                # Proxy hide headers
                proxy_hide_header Pragma;
                proxy_hide_header Server;
                proxy_hide_header Request-Context;
                proxy_hide_header X-Powered-By;
                proxy_hide_header Access-Control-Allow-Headers;
                proxy_hide_header Access-Control-Allow-Methods;
                proxy_hide_header Access-Control-Allow-Origin;
                proxy_hide_header Via;
        }
}
